#! /usr/bin/python2
'''
Python script to parse JSON makefiles.

@author: Sam Agnew
'''
import sys
import json
import subprocess
import os
import functions
import JSONMaker
import MakeFileConverter

try:
    with functions.openIgnoreCase('JSONMakefile') as f:
        makeFile = json.load(f)
except (IOError, EnvironmentError):
    print >> sys.stderr, "Error! No JSONMakefile in this directory! Making one, and continuing."
    try:
        with functions.openIgnoreCase('Makefile') as makefile:
            converter = MakeFileConverter.MakeFileConverter(makefile)
            converter.convert()
            with functions.openIgnoreCase('JSONMakefile') as f:
                makeFile = json.load(f)
    except (IOError, EnvironmentError):
        print >> sys.stderr, "Error! No Makefile or JSONMakefile in this directory!"
        sys.exit()
except ValueError, e:
    print >> sys.stderr, "Error! Invalid JSON: " + str(e)
    sys.exit()

builder = JSONMaker.JSONMaker(makeFile)

try:
    if len(sys.argv) == 2:
        builder.build(sys.argv[1])
    elif len(sys.argv) == 1:
        builder.build('all')
    else:
        print >> sys.stderr,  "Usage: JSONMake [target]"
        sys.exit(1)
except subprocess.CalledProcessError as e:
    print >> sys.stderr, e.output
    sys.exit()
except KeyError as e:
    #Printing out a message was dealt with already
    sys.exit()

print "Build successful!"
